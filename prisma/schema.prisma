// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Player {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  games     Game[]
  turns     Turn[]
}

model Game {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  players   Player[]
}

model Turn {
  id       Int     @id @default(autoincrement())
  throws   Throw[]
  Player   Player? @relation(fields: [playerId], references: [id])
  playerId String?
}

model Throw {
  id     Int   @id @default(autoincrement())
  score  Int
  ring   Ring?
  turn   Turn  @relation(fields: [turnId], references: [id])
  turnId Int
}

enum Ring {
  D
  T
}
